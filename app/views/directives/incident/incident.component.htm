
<section class="control-panel">

	<header class="section-header">

		<h2 class="section-header__title">
			Command Center
		</h2>

		<div class="section-header__attributes duration">
			<span class="duration__label">
				Duration:
			</span>
			<span class="duration__time">
				{{ this.duration.hours }} Hours, {{ this.duration.minutes }} Minutes
			</span>
		</div>

	</header>

	<form class="form">

		<div class="form__field">
			<div class="form__field-label form__field-label--version">
				Version:
			</div>
			<div class="form__field-body">

				<div class="versions">
					<span
						(click)="useVersion( 'general' )"
						class="versions__version"
						[class.versions__version--off]="( intakeForm.version !== 'general' )"
						[class.versions__version--on]="( intakeForm.version === 'general' )">
						General Version
					</span>
					<span
						(click)="useVersion( 'invision' )"
						class="versions__version versions__version--on"
						[class.versions__version--off]="( intakeForm.version !== 'invision' )"
						[class.versions__version--on]="( intakeForm.version === 'invision' )">
						InVision Version
					</span>
				</div>

			</div>
		</div>

		<div class="form__field">
			<div class="form__field-label">
				Description:
			</div>
			<div class="form__field-body">

				<input type="text" name="description" [(ngModel)]="intakeForm.description" (ngModelChange)="applyForm()" autofocus class="large" />

			</div>
		</div>

		<ng-template [ngIf]="( intakeForm.version === 'invision' )">

			<div class="form__field">
				<div class="form__field-label">
					Customers:
				</div>
				<div class="form__field-body customers">

					<div class="customers__item">
						<input type="text" name="customerType" [(ngModel)]="intakeForm.customerType" (ngModelChange)="applyForm()" class="customers__input" />
						<div class="customers__note">
							<span class="customers__label">Type of Customers:</span>
							<span class="customers__values">None | Internal | EA | MT | PC</span>
						</div>
					</div>

					<div class="customers__item">
						<input type="text" name="customerCount" [(ngModel)]="intakeForm.customerCount" (ngModelChange)="applyForm()" class="customers__input" />
						<div class="customers__note">
							<span class="customers__label">Number Affected:</span>
							<span class="customers__values">Few | Some | Many | All</span>
						</div>
					</div>

				</div>
			</div>
			<div class="form__field">
				<div class="form__field-label">
					Internal:
				</div>
				<div class="form__field-body internal">

					<div class="internal__item">
						<input type="text" name="internalTeam" [(ngModel)]="intakeForm.internalTeam" (ngModelChange)="applyForm()" class="internal__input" />
						<div class="internal__note">
							<span class="internal__label">Team Performing Investigation / Writing RCA</span>
						</div>
					</div>

					<div class="internal__item">
						<input type="text" name="zendeskTicket" [(ngModel)]="intakeForm.zendeskTicket" (ngModelChange)="applyForm()" class="internal__input" />
						<div class="internal__note">
							<span class="internal__label">Zendesk Ticket</span>
						</div>
					</div>

				</div>
			</div>

		</ng-template>

		<ng-template [ngIf]="( intakeForm.version === 'general' )">

			<div class="form__field">
				<div class="form__field-label">
					Priority:
				</div>
				<div class="form__field-body form__field-body--select">

					<select name="priority" [(ngModel)]="intakeForm.priorityID" (ngModelChange)="applyForm()">
						<option *ngFor="let option of priorities" [ngValue]="option.id">
							{{ option.id }} &mdash; {{ option.description }}
						</option>
					</select>

				</div>
			</div>

		</ng-template>

		<div class="form__field">
			<div class="form__field-label">
				Started At:
			</div>
			<div class="form__field-body form__field-body--select">

				<bn-date-time [(value)]="intakeForm.startedAt" (valueChange)="applyForm()"></bn-date-time>

				<span class="local-time-note">
					( Use your local time )
				</span>

			</div>
		</div>

		<div class="form__field">
			<div class="form__field-label">
				Video Link:
			</div>
			<div class="form__field-body">

				<input type="text" name="videoLink" [(ngModel)]="intakeForm.videoLink" (ngModelChange)="applyForm()" class="large" />

			</div>
		</div>

		<div class="form__field">
			<div class="form__field-label">
				Update:
			</div>
			<div class="form__field-body form__field-body--select add-update">

				<select name="updateStatus" [(ngModel)]="intakeForm.updateStatusID" class="add-update__status">
					<option *ngFor="let option of statuses" [ngValue]="option.id">
						{{ option.id }}
					</option>
				</select>

				<textarea
					name="updateDescription"
					[(ngModel)]="intakeForm.updateDescription"
					(keydown.meta.Enter)="addUpdate()"
					class="add-update__content">
				</textarea>

				<button type="button" (click)="addUpdate()" class="add-update__submit">
					Add Update
				</button>

				<span class="add-update__submit-note">Or CMD+Enter</span>

			</div>
		</div>

		<div class="form__field form__field--slack">
			<div class="form__field-label">
				For Slack:
			</div>
			<div class="form__field-body form__field-body--select slack">

				<select name="slackSize" [(ngModel)]="intakeForm.slackSize" (ngModelChange)="applyForm()" class="slack__size">
					<option [ngValue]="9999">Show All Updates</option>
					<option [ngValue]="1">1 Update</option>
					<option [ngValue]="3">3 Updates</option>
					<option [ngValue]="5">5 Updates</option>
					<option [ngValue]="8">8 Updates</option>
					<option [ngValue]="13">13 Updates</option>
				</select>

				<select name="slackFormat" [(ngModel)]="intakeForm.slackFormat" (ngModelChange)="applyForm()" class="slack__format">
					<option [ngValue]=" 'compact' ">Compact</option>
					<option [ngValue]=" 'readable' ">Readable</option>
				</select>

				<select name="slackTimezone" [(ngModel)]="intakeForm.slackTimezone" (ngModelChange)="applyForm()" class="slack__timezone">
					<option *ngFor="let option of timezones" [ngValue]="option">
						{{ option.abbreviation }} - {{ option.name }} ( {{ option.utc }} )
					</option>
				</select>

				<textarea #slackRef [readonly]="true" [value]="intakeForm.slack" (click)="slackRef.select()" class="slack__content"></textarea>

			</div>
		</div>

	</form>

</section>

<section *ngIf="incident.updates.length" class="previous-updates">

	<header class="section-header">

		<h2 class="section-header__title">
			Previous Updates
		</h2>

		<div class="section-header__attributes updates-sort">
			<span class="updates-sort__label">
				Sort:
			</span>
			<span class="updates-sort__selection">
				<a
					(click)="sortUpdates( 'asc' )"
					class="updates-sort__direction"
					[class.updates-sort__direction--on]="( updateSortDirection === 'asc' )"
					>Asc</a>
				-
				<a
					(click)="sortUpdates( 'desc' )"
					class="updates-sort__direction"
					[class.updates-sort__direction--on]="( updateSortDirection === 'desc' )"
					>Desc</a>
			</span>
		</div>

	</header>

	<!-- BEGIN: Edit intakeForm. -->
	<ng-template [ngIf]="editForm">

		<form class="form">

			<div class="form__field">
				<div class="form__field-label">
					Status:
				</div>
				<div class="form__field-body form__field-body--select">

					<select name="updateStatus" [(ngModel)]="editForm.statusID" class="update__status">
						<option *ngFor="let option of statuses" [ngValue]="option.id">
							{{ option.id }}
						</option>
					</select>

				</div>
			</div>

			<div class="form__field">
				<div class="form__field-label">
					Created At:
				</div>
				<div class="form__field-body form__field-body--select">

					<bn-date-time [(value)]="editForm.createdAt"></bn-date-time>

					<span class="local-time-note">
						( Use your local time )
					</span>

				</div>
			</div>

			<div class="form__field">
				<div class="form__field-label">
					Description:
				</div>
				<div class="form__field-body">

					<textarea
						name="updateDescription"
						[(ngModel)]="editForm.description"
						(keydown.meta.Enter)="saveUpdateChanges()"
						class="">
					</textarea>

				</div>
			</div>

			<div class="form__actions">

				<button type="button" (click)="saveUpdateChanges()" class="form__primary-action">
					Save Changes
				</button>

				<a (click)="cancelEdit()" class="form__secondary-action">Cancel</a>

			</div>

		</form>

	</ng-template>
	<!-- END: Edit intakeForm. -->


	<!-- BEGIN: Timeline. -->
	<ng-template [ngIf]="! editForm">

		<div class="timeline">

			<div *ngFor="let update of incident.updates | timelineSort : updateSortDirection" class="timeline__item">

				<div class="timeline__createdAt">
					<div class="timeline__time">
						{{ update.createdAt | timelineTime }}
					</div>
					<div class="timeline__date">
						{{ update.createdAt | timelineDate }}
					</div>
				</div>

				<div class="timeline__description">
					<span class="timeline__status">{{ update.status.id }}</span>
					&mdash;
					{{ update.description }}
				</div>

				<div class="timeline__actions">
					<a (click)="editUpdate( update )" class="timeline__edit">edit</a>
					<span class="timeline__separator">|</span>
					<a (click)="deleteUpdate( update )" class="timeline__delete">delete</a>
				</div>

			</div>

		</div>

	</ng-template>
	<!-- END: Timeline. -->

</section>
